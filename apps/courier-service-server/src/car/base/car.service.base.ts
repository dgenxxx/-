/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Car as PrismaCar,
  Courier as PrismaCourier,
  Office as PrismaOffice,
} from "@prisma/client";

export class CarServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CarCountArgs, "select">): Promise<number> {
    return this.prisma.car.count(args);
  }

  async cars<T extends Prisma.CarFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarFindManyArgs>
  ): Promise<PrismaCar[]> {
    return this.prisma.car.findMany<Prisma.CarFindManyArgs>(args);
  }
  async car<T extends Prisma.CarFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarFindUniqueArgs>
  ): Promise<PrismaCar | null> {
    return this.prisma.car.findUnique(args);
  }
  async createCar<T extends Prisma.CarCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarCreateArgs>
  ): Promise<PrismaCar> {
    return this.prisma.car.create<T>(args);
  }
  async updateCar<T extends Prisma.CarUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarUpdateArgs>
  ): Promise<PrismaCar> {
    return this.prisma.car.update<T>(args);
  }
  async deleteCar<T extends Prisma.CarDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarDeleteArgs>
  ): Promise<PrismaCar> {
    return this.prisma.car.delete(args);
  }

  async getCourier(parentId: string): Promise<PrismaCourier | null> {
    return this.prisma.car
      .findUnique({
        where: { id: parentId },
      })
      .courier();
  }

  async getOffice(parentId: string): Promise<PrismaOffice | null> {
    return this.prisma.car
      .findUnique({
        where: { id: parentId },
      })
      .office();
  }
}
