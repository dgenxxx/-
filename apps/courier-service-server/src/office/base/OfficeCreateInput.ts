/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { CarCreateNestedManyWithoutOfficesInput } from "./CarCreateNestedManyWithoutOfficesInput";
import { Type } from "class-transformer";
import { CourierCreateNestedManyWithoutOfficesInput } from "./CourierCreateNestedManyWithoutOfficesInput";
import { SettlementWhereUniqueInput } from "../../settlement/base/SettlementWhereUniqueInput";

@InputType()
class OfficeCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => CarCreateNestedManyWithoutOfficesInput,
  })
  @ValidateNested()
  @Type(() => CarCreateNestedManyWithoutOfficesInput)
  @IsOptional()
  @Field(() => CarCreateNestedManyWithoutOfficesInput, {
    nullable: true,
  })
  cars?: CarCreateNestedManyWithoutOfficesInput;

  @ApiProperty({
    required: false,
    type: () => CourierCreateNestedManyWithoutOfficesInput,
  })
  @ValidateNested()
  @Type(() => CourierCreateNestedManyWithoutOfficesInput)
  @IsOptional()
  @Field(() => CourierCreateNestedManyWithoutOfficesInput, {
    nullable: true,
  })
  couriers?: CourierCreateNestedManyWithoutOfficesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hoursOfOperation?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  manager?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => SettlementWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SettlementWhereUniqueInput)
  @IsOptional()
  @Field(() => SettlementWhereUniqueInput, {
    nullable: true,
  })
  settlement?: SettlementWhereUniqueInput | null;
}

export { OfficeCreateInput as OfficeCreateInput };
