/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { CarListRelationFilter } from "../../car/base/CarListRelationFilter";
import { CourierListRelationFilter } from "../../courier/base/CourierListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { SettlementWhereUniqueInput } from "../../settlement/base/SettlementWhereUniqueInput";

@InputType()
class OfficeWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  address?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CarListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CarListRelationFilter)
  @IsOptional()
  @Field(() => CarListRelationFilter, {
    nullable: true,
  })
  cars?: CarListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CourierListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CourierListRelationFilter)
  @IsOptional()
  @Field(() => CourierListRelationFilter, {
    nullable: true,
  })
  couriers?: CourierListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  hoursOfOperation?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  manager?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SettlementWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SettlementWhereUniqueInput)
  @IsOptional()
  @Field(() => SettlementWhereUniqueInput, {
    nullable: true,
  })
  settlement?: SettlementWhereUniqueInput;
}

export { OfficeWhereInput as OfficeWhereInput };
